{"version":3,"sources":["Components/FeedbackOptions/Feedback.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/Statistic/Statistic.js","Components/Statistic/Statistics.js","Components/FeedbackOptions/Feedback.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistic","label","value","Statistics","good","neutral","bad","total","positivePercentage","FeedbackOptions","options","onLeaveFeedback","map","key","className","styles","btn","type","name","onClick","Section","props","title","children","Notification","message","App","state","handleIncrement","target","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Feedback","Object","keys","Component","ReactDOM","render","document","getElementById"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,IAAM,wB,gBCAxBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,qKCYbC,EAVG,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,MAAV,OAChB,2BACGD,EADH,IACWC,ICSEC,EAVI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,oCACE,kBAAC,EAAD,CAAWP,MAAM,OAAOC,MAAOE,IAC/B,kBAAC,EAAD,CAAWH,MAAM,UAAUC,MAAOG,IAClC,kBAAC,EAAD,CAAWJ,MAAM,MAAMC,MAAOI,IAC9B,kBAAC,EAAD,CAAWL,MAAM,QAAQC,MAAOK,IAChC,kBAAC,EAAD,CAAWN,MAAM,oBAAoBC,MAAOM,EAAqB,Q,gBCmBtDC,MAzBf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAClC,OACE,oCACGD,EAAQE,KAAI,SAACC,GACZ,OACE,4BACEC,UAAWC,IAAOC,IAClBH,IAAKA,EACLI,KAAK,SACLC,KAAML,EACNM,QAASR,GAERE,Q,gBCNEO,EAPC,SAACC,GAAD,OACd,oCACE,wBAAIP,UAAWC,IAAOO,OAAQD,EAAMC,OACnCD,EAAME,W,gBCEIC,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,wBAAIX,UAAWC,IAAOU,SAAUA,ICsDnBC,E,4MApDbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,gBAAkB,YAAiB,IAAdC,EAAa,EAAbA,OACnB,EAAKC,UAAS,SAACC,GACb,OAAO,eACJF,EAAOX,KAAOa,EAAUF,EAAOX,MAAQ,O,EAK9Cc,mBAAqB,WACnB,OAAO,EAAKL,MAAMvB,KAAO,EAAKuB,MAAMtB,QAAU,EAAKsB,MAAMrB,K,EAG3D2B,gCAAkC,SAAC1B,GAAD,OAChC2B,KAAKC,MAAO,EAAKR,MAAMvB,KAAOG,EAAS,M,uDAE/B,IAAD,EACwB6B,KAAKT,MAA5BvB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IAEvB,OACE,oCACE,kBAAC,EAAD,CAASgB,MAAM,yBACb,kBAACe,EAAD,CACE3B,QAAS4B,OAAOC,KAAKH,KAAKT,OAC1BhB,gBAAiByB,KAAKR,mBAGzBxB,EAAOC,EAAUC,EAAM,EACtB,kBAAC,EAAD,CAASgB,MAAM,cACb,kBAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAO6B,KAAKJ,qBACZxB,mBAAoB4B,KAAKH,gCACvBG,KAAKJ,yBAKX,kBAAC,EAAD,CAAcP,QAAQ,2B,GA9Cde,a,MCDlBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.38baf39e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Feedback_btn__biydR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__cV8m2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__3e6AU\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Statistic = ({ label, value }) => (\n  <p>\n    {label}:{value}\n  </p>\n);\n\nStatistic.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Statistic;\n","import React from \"react\";\nimport Statistic from \"./Statistic\";\nimport PropTypes from \"prop-types\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <>\n    <Statistic label=\"Good\" value={good} />\n    <Statistic label=\"Neutral\" value={neutral} />\n    <Statistic label=\"Bad\" value={bad} />\n    <Statistic label=\"Total\" value={total} />\n    <Statistic label=\"Positive feedback\" value={positivePercentage + \"%\"} />\n  </>\n);\n\nexport default Statistics;\n\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Feedback.module.css\";\n\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\n  return (\n    <>\n      {options.map((key) => {\n        return (\n          <button\n            className={styles.btn}\n            key={key}\n            type=\"button\"\n            name={key}\n            onClick={onLeaveFeedback}\n          >\n            {key}\n          </button>\n        );\n      })}\n    </>\n  );\n}\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from \"react\";\nimport styles from \"./Section.module.css\";\n\nconst Section = (props) => (\n  <>\n    <h2 className={styles.title}>{props.title}</h2>\n    {props.children}\n  </>\n);\n\nexport default Section;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Notification.module.css\";\n\nconst Notification = ({ message }) => (\n  <h3 className={styles.message}>{message}</h3>\n);\n\nexport default Notification;\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n","import React, { Component } from \"react\";\nimport Statistics from \"./Components/Statistic/Statistics\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/Feedback\";\nimport Section from \"./Components/Section/Section\";\nimport Notification from \"./Components/Notification/Notification\";\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = ({ target }) => {\n    this.setState((prevState) => {\n      return {\n        [target.name]: prevState[target.name] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = (total) =>\n    Math.round((this.state.good / total) * 100);\n\n  render() {\n    const { good, neutral, bad } = this.state;\n\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleIncrement}\n          />\n        </Section>\n        {good + neutral + bad > 0 ? (\n          <Section title=\"Statistics\">\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage(\n                this.countTotalFeedback()\n              )}\n            />\n          </Section>\n        ) : (\n          <Notification message=\"No feedback given\" />\n        )}\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./base.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}